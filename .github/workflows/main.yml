name: Test and E2E

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://thuppertz:turing_college@localhost:5432/mental_health_tracker_test
      JWT_SECRET: test_secret
      PORT: 3005
      CI: true
      NODE_ENV: test
      VITE_BACKEND_URL: http://localhost:3005/api/trpc
      PLAYWRIGHT_TEST_BASE_URL: http://localhost:4173

    services:
      postgres:
        image: postgres:16.1-alpine
        env:
          POSTGRES_USER: thuppertz
          POSTGRES_PASSWORD: turing_college
          POSTGRES_DB: mental_health_tracker_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install root dependencies
        run: npm ci

      # Server-side setup and checks
      - name: Install server dependencies
        run: npm ci
        working-directory: ./packages/server

      - name: Run server type check
        run: npm run type-check
        working-directory: ./packages/server

      - name: Run server lint
        run: npm run lint
        working-directory: ./packages/server

      - name: Run database migrations
        run: npm run migrate:latest
        working-directory: ./packages/server

      - name: Run server tests
        run: npm run test
        working-directory: ./packages/server

      # Client-side setup and checks
      - name: Install client dependencies
        run: npm ci
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Run client type check
        run: npm run type-check
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Run client lint
        run: npm run lint
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Build client
        run: npm run build
        working-directory: ./packages/client/mental-health-tracker-frontend

      # E2E test setup and execution
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Install xvfb
        run: sudo apt-get install -y xvfb

      - name: Start server
        run: |
          npm run dev > server.log 2>&1 &
          echo $! > server.pid
        working-directory: ./packages/server
        env:
          NODE_ENV: test

      - name: Wait for server
        run: |
          timeout=60
          while ! nc -z localhost 3005; do
            if [ $timeout -le 0 ]; then
              echo "Timed out waiting for server"
              cat server.log
              exit 1
            fi
            timeout=$((timeout - 1))
            sleep 1
          done
          echo "Server is up and running"

      - name: Run Playwright tests
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing directory contents:"
          ls -la
          echo "Running Playwright tests..."
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npm run test:e2e
        working-directory: ./packages/client/mental-health-tracker-frontend
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:4173
          VITE_BACKEND_URL: http://localhost:3005/api/trpc
          DEBUG: pw:api,pw:browser*

      - name: Print Environment Variables
        run: |
          echo "VITE_BACKEND_URL: $VITE_BACKEND_URL"
          echo "PLAYWRIGHT_TEST_BASE_URL: $PLAYWRIGHT_TEST_BASE_URL"

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/client/mental-health-tracker-frontend/playwright-report/
          retention-days: 30

      - name: Stop server
        if: always()
        run: kill $(cat packages/server/server.pid)
