name: Test, E2E, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: test_secret
      PORT: 3005
      CI: true
      NODE_ENV: test
      VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
      PLAYWRIGHT_TEST_BASE_URL: ${{ secrets.PLAYWRIGHT_TEST_BASE_URL }}

    services:
      postgres:
        image: postgres:16.1-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install root dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run format check
        run: npm run format -- --check

      - name: Run type check
        run: npm run type-check

      # Server-side checks
      - name: Install server dependencies
        run: npm ci
        working-directory: ./packages/server

      - name: Run server tests
        run: npm run test
        working-directory: ./packages/server

      - name: Run database migrations
        run: npm run migrate:latest
        working-directory: ./packages/server

      # Client-side checks
      - name: Install client dependencies
        run: npm ci
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Build client
        run: npm run build
        working-directory: ./packages/client/mental-health-tracker-frontend

      # E2E test setup and execution
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Start server
        run: |
          npm run dev > server.log 2>&1 &
          echo $! > server.pid
        working-directory: ./packages/server
        env:
          NODE_ENV: test

      - name: Wait for server
        run: |
          timeout=60
          while ! nc -z localhost 3005; do
            if [ $timeout -le 0 ]; then
              echo "Timed out waiting for server"
              cat server.log
              exit 1
            fi
            timeout=$((timeout - 1))
            sleep 1
          done
          echo "Server is up and running"

      - name: Serve client
        run: npm run preview > client.log 2>&1 &
        working-directory: ./packages/client/mental-health-tracker-frontend

      - name: Wait for client
        run: |
          timeout=60
          while ! nc -z localhost 5173; do
            if [ $timeout -le 0 ]; then
              echo "Timed out waiting for client"
              cat client.log
              exit 1
            fi
            timeout=$((timeout - 1))
            sleep 1
          done
          echo "Client is up and running"

      - name: Check if application is responding
        run: |
          curl -sSf http://localhost:5173 || (echo "Application is not running" && exit 1)

      - name: Run Playwright tests
        run: npm run test:e2e
        working-directory: ./packages/client/mental-health-tracker-frontend
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ secrets.PLAYWRIGHT_TEST_BASE_URL }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
          DEBUG: pw:api,pw:browser*

      - name: Upload Playwright report
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: packages/client/mental-health-tracker-frontend/playwright-report

      - name: Upload server logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: server-logs
          path: packages/server/server.log
          retention-days: 30

      - name: Upload client logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: client-logs
          path: packages/client/mental-health-tracker-frontend/client.log
          retention-days: 30

      - name: Stop server
        if: always()
        run: kill $(cat packages/server/server.pid)

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install and Build Server
        run: |
          cd ./packages/server
          npm ci
          npm run build

      - name: Install and Build Client
        run: |
          cd ./packages/client/mental-health-tracker-frontend
          npm ci
          npm run build

      - name: Deploy to Lightsail
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: "35.178.250.224"
          USERNAME: "ubuntu"
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
        run: |
          echo "$SSH_PRIVATE_KEY" > lightsail_key
          chmod 600 lightsail_key
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          scp -i lightsail_key -r ./packages/server/* $USERNAME@$HOST:/home/$USERNAME/app/server
          scp -i lightsail_key -r ./packages/client/mental-health-tracker-frontend/dist/* $USERNAME@$HOST:/home/$USERNAME/app/client
          ssh -i lightsail_key $USERNAME@$HOST << EOF
            cd /home/$USERNAME/app/server
            npm ci --production
            npm run migrate:latest
            pm2 restart all || pm2 start npm -- start
          EOF
